{
  "rules": {
    ".read": "true",
    "appSettings": {
      ".write": "auth.uid === 'QYm5NATKa6MGD87UpNZCTl6IolX2'"
    },
    "ids": {
      ".write": "newData.exists() && auth != null"
    },
    "PERRINNTeams": {
      ".indexOn": ["name"]
    },
    "PERRINNSearch": {
      "$teams": {
        ".indexOn": ["nameLowerCase"]
      }
    },
    "subscribeTeamUsers": {
      "$teamid": {
        "$uid": {
          ".write": "auth.uid === $uid"
        }
      }
    },
    "teamActivities": {
      "$teamid": {
        ".write": "newData.exists() && (root.child('PERRINNTeams').child($teamid).child('leaders').child(auth.uid).exists() || root.child('PERRINNTeams').child($teamid).child('members').child(auth.uid).exists())"
      }
    },
    "teamMessages": {
      "$teamid": {
        ".indexOn": ["timestamp"],
        "$messageid": {
          "payload":{
            ".write": "!data.exists() && (root.child('PERRINNTeams').child($teamid).child('leaders').child(auth.uid).exists() || root.child('PERRINNTeams').child($teamid).child('members').child(auth.uid).exists())",
            "user": {
              ".validate": "newData.val()==auth.uid"
            }
          },
          "process":{
            ".write":"!data.exists() && root.child('PERRINNTeams').child($teamid).child('leaders').child(auth.uid).exists()",
            "user":{
              ".validate": "newData.val()==auth.uid"
            }
          }
        }
      }
    },
    "teamPayments": {
      "$teamid": {
        "$chargeid": {
          ".write": "!data.exists() && newData.exists() && root.child('PERRINNTeams').child($teamid).child('leaders').child(auth.uid).exists()"
        }
      }
    },
    "teamReads": {
      "$teamid": {
        ".write": "newData.exists() && auth.uid === $teamid"
      }
    },
    "teams": {
      "$teamid": {
        "$entry": {
          ".write": "!data.exists() && root.child('PERRINNTeams').child($teamid).child('leaders').child(auth.uid).exists() || !root.child('PERRINNTeams').child($teamid).exists() && auth != null",
          "user": {
            ".validate": "newData.val()==auth.uid"
          }
        }
      }
    },
    "users": {
      "$uid": {
        "$entry": {
            ".write": "!data.exists() && auth.uid === $uid"
        }
      }
    },
    "viewUserTeams": {
      "$uid": {
        ".write": "newData.exists() && auth.uid === $uid"
      }
    }
  }
}
